#
# Default settings for the simulation
#

## Scenario settings
Scenario.name = default_scenario
Scenario.simulateConnections = true
Scenario.updateInterval = 0.001

Scenario.endTime = 435

## Message creation parameters
# How many event generators
Events.nrof = 1
# Class of the first event generator
Events1.class = MessageBurstGenerator
# (following settings are specific for the MessageEventGenerator class)
# Creation interval in seconds (one new message every 25 to 35 seconds)
Events1.interval = 1
# Message sizes (6kB - 8kB)
Events1.size = 7k
# range of message source/destination addresses
Events1.hosts = 1,10
Events1.tohosts = 0,0
# Message ID prefix
Events1.prefix = M
#Events1.time = 0, 80




## Interface-specific settings:
# type : which interface class the interface belongs to
# For different types, the sub-parameters are interface-specific
# For SimpleBroadcastInterface, the parameters are:
# transmitSpeed : transmit speed of the interface (bytes per second)
# transmitRange : range of the interface (meters)

# "Bluetooth" interface for all nodes
#btInterface.type = DependDistanceInterface
btInterface.type = SimpleBroadcastInterface
# Transmit speed of 2 Mbps = 250kBps
btInterface.transmitSpeed = 5M
btInterface.transmitRange = 200



# Define 14 different node groups
Scenario.nrofHostGroups = 14

## Group-specific settings:
# groupID : Group's identifier. Used as the prefix of host names
# nrofHosts: number of hosts in the group
# movementModel: movement model of the hosts (valid class name from movement package)
# waitTime: minimum and maximum wait times (seconds) after reaching destination
# speed: minimum and maximum speeds (m/s) when moving on a path
# bufferSize: size of the message buffer (bytes)
# router: router used to route messages (valid class name from routing package)
# activeTimes: Time intervals when the nodes in the group are active (start1, end1, start2, end2, ...)
# msgTtl : TTL (minutes) of the messages created by this host group, default=infinite

## Group and movement model specific settings
# pois: Points Of Interest indexes and probabilities (poiIndex1, poiProb1, poiIndex2, poiProb2, ... )
#       for ShortestPathMapBasedMovement
# okMaps : which map nodes are OK for the group (map file indexes), default=all
#          for all MapBasedMovent models
# routeFile: route's file path - for MapRouteMovement
# routeType: route's type - for MapRouteMovement


# Common settings for all groups
Group.movementModel = MapRouteMovement
#Group.router = DTNCloseRouter
Group.router = DTNGeoRouter
#Group.router = DTNLoadRouter
Group.bufferSize = 5000M


Group.routeType = 1
Group.waitTime = 0, 0
Group.nrofHosts = 1


# All nodes have the bluetooth interface
Group.nrofInterfaces = 1
Group.interface1 = btInterface
# Walking speeds
Group.speed = 4.5,4.5

# Message TTL of 300 minutes (5 hours)
Group.msgTtl = 300



# Ground specific settings
Group1.groupID = g
Group1.nrofHosts = 1
Group1.movementModel = StationaryMovement
Group1.nodeLocation = 400,800

# uav2
Group2.groupID = u

Group2.movementModel = MapRouteMovement
Group2.routeFile = data/uav1.wkt



# uav3
Group3.groupID = u

Group3.movementModel = MapRouteMovement
Group3.routeFile = data/uav2.wkt

# uav4
Group4.groupID = u

Group4.movementModel = MapRouteMovement
Group4.routeFile = data/uav3.wkt


# uav
Group5.groupID = u

Group5.movementModel = MapRouteMovement
Group5.routeFile = data/uav4.wkt


# uav
Group6.groupID = u

Group6.movementModel = MapRouteMovement
Group6.routeFile = data/uav5.wkt

# uav
Group7.groupID = u

Group7.movementModel = MapRouteMovement
Group7.routeFile = data/uav6.wkt

# uav4
Group8.groupID = u

Group8.movementModel = MapRouteMovement
Group8.routeFile = data/uav7.wkt


# uav4
Group9.groupID = u

Group9.movementModel = MapRouteMovement
Group9.routeFile = data/uav8.wkt



# uav4
Group10.groupID = u

Group10.movementModel = MapRouteMovement
Group10.routeFile = data/uav9.wkt


# uav4
Group11.groupID = f

Group11.movementModel = MapRouteMovement
Group11.routeFile = data/ferry1.wkt
Group11.routeFirstStop = 1

# uav4
Group12.groupID = f

Group12.movementModel = MapRouteMovement
Group12.routeFile = data/ferry2.wkt
Group12.routeFirstStop = 1

# uav4
Group13.groupID = f

Group13.movementModel = MapRouteMovement
Group13.routeFile = data/ferry3.wkt
Group13.routeFirstStop = 0

# uav4
Group14.groupID = f

Group14.movementModel = MapRouteMovement
Group14.routeFile = data/ferry4.wkt
Group14.routeFirstStop = 0





## Movement model settings
# seed for movement models' pseudo random number generator (default = 0)
MovementModel.rngSeed = 1
# World's size for Movement Models without implicit size (width, height; meters)
MovementModel.worldSize = 800, 800
# How long time to move hosts in the world before real simulation
MovementModel.warmup = 0

## Map based movement -movement model specific settings
MapBasedMovement.nrofMapFiles = 1

MapBasedMovement.mapFile1 = data/map1.wkt


## Reports - all report names have to be valid report classes

# how many reports to load
Report.nrofReports = 9
# length of the warm up period (simulated seconds)
Report.warmup = 0
# default directory of reports (can be overridden per Report with output setting)
Report.reportDir = reports/
# Report classes to load
Report.report1 = MessageStatsReport
Report.report2 = ContactTimesReport
Report.report3 = CreatedMessagesReport
Report.report4 = DistanceDelayReport
Report.report5 = EventLogReport
Report.report6 = MessageDelayReport
Report.report7 = MessageDeliveryReport
Report.report8 = DeliveredMessagesReport
Report.report9 = BufferOccupancyReport
## Default settings for some routers settings
ProphetRouter.secondsInTimeUnit = 30
SprayAndWaitRouter.nrofCopies = 6
SprayAndWaitRouter.binaryMode = true

## Optimization settings -- these affect the speed of the simulation
## see World class for details.
Optimization.cellSizeMult = 5
Optimization.randomizeUpdateOrder = true


## GUI settings

# GUI underlay image settings
GUI.UnderlayImage.fileName = data/helsinki_underlay.png
# Image offset in pixels (x, y)
GUI.UnderlayImage.offset = 64, 20
# Scaling factor for the image
GUI.UnderlayImage.scale = 4.75
# Image rotation (radians)
GUI.UnderlayImage.rotate = -0.015

# how many events to show in the log panel (default = 30)
GUI.EventLogPanel.nrofEvents = 100
# Regular Expression log filter (see Pattern-class from the Java API for RE-matching details)
#GUI.EventLogPanel.REfilter = .*p[1-9]<->p[1-9]$
